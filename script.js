function updateFields() {
    const category = document.getElementById('productCategory').value;
    document.getElementById('productSizeContainer').style.display = category !== '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã' ? 'block' : 'none';
    document.getElementById('productColorContainer').style.display = category === '–û–¥–µ–∂–¥–∞' ? 'block' : 'none';
    document.getElementById('productConfigContainer').style.display = category === '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã' ? 'block' : 'none';
}

let cachedExchangeRate = null;
async function fetchExchangeRate() {
    if (cachedExchangeRate) return cachedExchangeRate;
    
    try {
        const response = await fetch('https://www.cbr-xml-daily.ru/daily_json.js');
        const data = await response.json();
        cachedExchangeRate = data.Valute.USD.Value;
        return cachedExchangeRate;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        return null;
    }
}

async function calculateTotal() {
    const priceUSD = parseFloat(document.getElementById('productPrice').value);
    if (isNaN(priceUSD) || priceUSD <= 0) {
        alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞.');
        return;
    }
    
    const priceWithVAT = Math.ceil(priceUSD * 1.09);
    document.getElementById('priceWithVATDisplay').innerText = '–¶–µ–Ω–∞ —Å –ù–î–° (9%): ' + priceWithVAT + ' $';
    
    const exchangeRate = await fetchExchangeRate();
    if (!exchangeRate) return;
    
    const finalPrice = Math.ceil(priceWithVAT * exchangeRate * 1.30);
    document.getElementById('finalPrice').innerText = '–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ' + finalPrice + ' ‚ÇΩ';
    
    document.getElementById('exchangeRateInfo').innerText = '–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞: ' + exchangeRate.toFixed(2) + ' ‚ÇΩ';
    document.getElementById('exchangeRateInfo').style.display = 'block';
    
    generateWhatsAppLink(priceWithVAT, finalPrice);
}

function generateWhatsAppLink(priceWithVAT, finalPrice) {
    const productLink = document.getElementById('productLink').value.trim();
    const productName = document.getElementById('productName').value.trim();
    const productSize = document.getElementById('productSizeContainer').style.display !== 'none' ? document.getElementById('productSize').value.trim() : '';
    const productColor = document.getElementById('productColorContainer').style.display !== 'none' ? document.getElementById('productColor').value.trim() : '';
    const productConfig = document.getElementById('productConfigContainer').style.display !== 'none' ? document.getElementById('productConfig').value.trim() : '';

    if (!productName || !productLink) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä.');
        return;
    }

    let message = `–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–æ–≤–∞—Ä:\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${productName}`;
    if (productSize) message += `\n–†–∞–∑–º–µ—Ä: ${productSize}`;
    if (productColor) message += `\n–¶–≤–µ—Ç: ${productColor}`;
    if (productConfig) message += `\n–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${productConfig}`;
    message += `\n–°—Å—ã–ª–∫–∞: ${productLink}\n–¶–µ–Ω–∞ —Å –ù–î–°: ${priceWithVAT} $\n–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞: ${finalPrice} ‚ÇΩ`;

    const whatsappLink = `https://wa.me/16463226000?text=${encodeURIComponent(message).replace(/%20/g, ' ')}`;

    const sendRequestBtn = document.getElementById('sendRequest');
    sendRequestBtn.style.display = 'block';
    sendRequestBtn.onclick = () => window.open(whatsappLink, '_blank');
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
function loadContent(containerId, filePath) {
    const container = document.getElementById(containerId);
    fetch(filePath)
        .then(response => response.text())
        .then(data => {
            container.innerHTML = data;
        })
        .catch(error => console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${filePath}:`, error));
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
    loadContent("termsContainer", "terms.html");
    loadContent("agentTermsContainer", "agent_terms.html");
});

// –õ–æ–≥–∏–∫–∞ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ —Å –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
document.addEventListener("DOMContentLoaded", () => {
    const accordionButtons = document.querySelectorAll(".accordion-button");

    accordionButtons.forEach(button => {
        button.addEventListener("click", () => {
            const content = button.nextElementSibling;

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            document.querySelectorAll(".accordion-content").forEach(item => {
                if (item !== content) {
                    item.style.display = "none";
                }
            });

            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            content.style.display = (content.style.display === "block") ? "none" : "block";

            // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç, –ø–ª–∞–≤–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ –Ω–µ–º—É
            if (content.style.display === "block") {
                setTimeout(() => {
                    content.scrollIntoView({ behavior: "smooth", block: "start" });
                }, 200); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã —Å–µ–∫—Ü–∏—è —É—Å–ø–µ–ª–∞ –æ—Ç–∫—Ä—ã—Ç—å—Å—è
            }
        });
    });
});

async function loadProductData() {
    const productUrl = document.getElementById("productLink").value;
    if (!productUrl) {
        alert("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä.");
        return;
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    document.getElementById("loadingMessage").style.display = "block";
    document.getElementById("productDetails").style.display = "none";

    try {
        const response = await fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(productUrl)}`);
        const data = await response.json();
        const parser = new DOMParser();
        const doc = parser.parseFromString(data.contents, "text/html");

        // 1Ô∏è‚É£ –ü–æ–∏—Å–∫ JSON-LD (–ª—É—á—à–∏–π —Å–ø–æ—Å–æ–± –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–ª–æ–∂–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö)
        let jsonLd = doc.querySelector('script[type="application/ld+json"]');
        let jsonData = jsonLd ? JSON.parse(jsonLd.textContent) : null;

        // 2Ô∏è‚É£ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        let productName = jsonData?.name || 
                          doc.querySelector('[itemprop="name"], [property="og:title"], meta[name="title"]')?.content || 
                          doc.querySelector("h1")?.innerText.trim();

        // 3Ô∏è‚É£ –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
        let productPrice = jsonData?.offers?.price ||
                           doc.querySelector('[itemprop="price"], [property="product:price:amount"], meta[property="og:price:amount"]')?.content ||
                           doc.querySelector(".price, .a-price-whole, .product-price, [class*='price']")?.innerText?.trim();

        // 4Ô∏è‚É£ –¶–≤–µ—Ç —Ç–æ–≤–∞—Ä–∞
        let productColor = jsonData?.color ||
                           doc.querySelector('[itemprop="color"], [data-color], [class*="color"]')?.content ||
                           doc.querySelector("label[for*='color'] span, .variation-selector")?.innerText?.trim();

        // 5Ô∏è‚É£ –ú–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–∞
        let productModel = jsonData?.model ||
                           doc.querySelector('[itemprop="model"], [property="product:model"], [class*="model"]')?.content ||
                           doc.querySelector(".product-model, .model-number, [class*='model']")?.innerText?.trim();

        // 6Ô∏è‚É£ –ü—Ä–æ–¥–∞–≤–µ—Ü
        let sellerName = jsonData?.brand?.name ||
                         jsonData?.offers?.seller?.name ||
                         doc.querySelector('[itemprop="seller"], [itemprop="brand"], [property="og:site_name"]')?.content ||
                         doc.querySelector(".seller-name, .merchant-info")?.innerText?.trim();

        // 7Ô∏è‚É£ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        let productImage = jsonData?.image ||
                           doc.querySelector('[property="og:image"], [itemprop="image"], meta[name="twitter:image"]')?.content ||
                           doc.querySelector("img[src*='product'], img[src*='image']")?.src;

        // –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        document.getElementById("loadingMessage").style.display = "none";

        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        document.getElementById("productImage").src = productImage || "placeholder.jpg";
        document.getElementById("productNameDisplay").innerText = productName ? `–ù–∞–∑–≤–∞–Ω–∏–µ: ${productName}` : "–ù–∞–∑–≤–∞–Ω–∏–µ: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ";
        document.getElementById("productPriceDisplay").innerText = productPrice ? `–¶–µ–Ω–∞: ${productPrice} $` : "–¶–µ–Ω–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞";
        document.getElementById("productColorDisplay").innerText = productColor ? `–¶–≤–µ—Ç: ${productColor}` : "–¶–≤–µ—Ç: –Ω–µ –Ω–∞–π–¥–µ–Ω";
        document.getElementById("productModelDisplay").innerText = productModel ? `–ú–æ–¥–µ–ª—å: ${productModel}` : "–ú–æ–¥–µ–ª—å: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞";
        document.getElementById("productSellerDisplay").innerText = sellerName ? `–ü—Ä–æ–¥–∞–≤–µ—Ü: ${sellerName}` : "–ü—Ä–æ–¥–∞–≤–µ—Ü: –Ω–µ –Ω–∞–π–¥–µ–Ω";

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        document.getElementById("productDetails").style.display = "block";

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
        document.getElementById("loadingMessage").innerText = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö üòû";
    }
}
